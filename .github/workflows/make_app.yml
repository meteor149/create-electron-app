name: AppMaker

# push 格式如 vXXX 的 tag 时自动执行打包
on:
  push:
    tags:
      - v*

jobs:
  release:
    name: build and release electron app
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Check out git repository
        uses: actions/checkout@v3.0.0

      - name: Install Node.js
        uses: actions/setup-node@v3.0.0
        with:
          # 指定 node.js 版本
          node-version: "18"

      - name: Install Dependencies
        run: |
          npm install --global yarn
          yarn install

      - name: Build Electron App
        run: yarn make
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}

      - name: Env for Windows
        if: matrix.os == 'windows-latest'
        run: |
          echo "PACKAGE_OUT_DIR=out/make/squirrel.windows/x64/" >> "$GITHUB_ENV"
          echo "PACKAGE_OUT_FORMAT=exe" >> "$GITHUB_ENV"

      - name: Env for MacOS
        if: matrix.os == 'macos-latest'
        run: |
          echo "PACKAGE_OUT_DIR=out/make/" >> "$GITHUB_ENV"
          echo "PACKAGE_OUT_FORMAT=dmg" >> "$GITHUB_ENV"

      - name: Env for ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: |
          echo "PACKAGE_OUT_DIR=out/make/deb/x64/" >> "$GITHUB_ENV"
          echo "PACKAGE_OUT_FORMAT=deb" >> "$GITHUB_ENV"

      - name: Cleanup Artifacts
        run: |
          npx rimraf "$PACKAGE_OUT_DIR!(*.$PACKAGE_OUT_FORMAT)"

      - name: Copy File
        run: |
          cp public/pack/ReleaseNote.md $PACKAGE_OUT_DIR

      - name: upload artifacts
        uses: actions/upload-artifact@v3.0.0
        with:
          name: ${{ matrix.os }}
          path: ${{ env.PACKAGE_OUT_DIR }}

      - name: release current repo
        uses: softprops/action-gh-release@v0.1.14
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ${{ env.PACKAGE_OUT_DIR }}/**
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}

      # 将安装包 push 到另一个 github 仓库
      - name: release package repo
        uses: softprops/action-gh-release@v0.1.14
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ${{ env.PACKAGE_OUT_DIR }}/**
          # 访问别的项目需要设置token
          token: ${{ secrets.PACKAGE_GITHUB_TOKEN }}
          # GitHub 项目地址，如 zexin612/create-electron-app
          repository: xxx
        env:
          # 项目地址，同上
          GITHUB_REPOSITORY: xxxx
